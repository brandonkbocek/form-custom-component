[{"C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\index.js":"1","C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\App.js":"2","C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\components\\SimpleInput.js":"3","C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\hooks\\use-input.js":"4","C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\components\\BasicForm.js":"5","C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\hooks\\use-input-again.js":"6"},{"size":142,"mtime":1645021120960,"results":"7","hashOfConfig":"8"},{"size":214,"mtime":1645060818875,"results":"9","hashOfConfig":"8"},{"size":2183,"mtime":1645061845290,"results":"10","hashOfConfig":"8"},{"size":1195,"mtime":1645063486525,"results":"11","hashOfConfig":"8"},{"size":3111,"mtime":1645061935009,"results":"12","hashOfConfig":"8"},{"size":879,"mtime":1645060551217,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"g2sqmu",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\index.js",[],["29","30"],"C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\App.js",["31"],"import BasicForm from './components/BasicForm';\nimport SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\components\\SimpleInput.js",[],"C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\hooks\\use-input.js",[],"C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\components\\BasicForm.js",["32"],"import useInputAgain from \"../hooks/use-input-again\";\nimport useInput from \"../hooks/use-input\";\n\nconst BasicForm = () => {\n\n  const {\n    value: enteredFirstName,\n    hasError: firstNameHasError,\n    // isValid: firstNameIsValid,\n    valueChangeHandler: onHandleFirstNameChange,\n    inputBlurHandler: onHandleFirstNameBlur,\n    reset: resetFirstName\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value: enteredLastName,\n    hasError: lastNameHasError,\n    // isValid: lastNameIsValid,\n    valueChangeHandler: onHandleLastNameChange,\n    inputBlurHandler: onHandleLastNameBlur,\n    reset: resetLastName\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    hasError: emailHasError,\n    // isValid: emailIsValid,\n    valueChangeHandler: onHandleEmailChange,\n    inputBlurHandler: onHandleEmailBlur,\n    reset: resetEmail\n  } = useInput(value => value.includes('@'));\n\n  // console.log('first:', enteredFirstName);\n  // console.log('last:', enteredLastName);\n  // console.log('email:', enteredEmail);\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    const formIsValid = !firstNameHasError && !lastNameHasError && !emailHasError;\n\n    if (formIsValid) {\n      console.log('First name:', enteredFirstName);\n      console.log('Last name:', enteredLastName);\n      console.log('Email:', enteredEmail);\n      resetFirstName();\n      resetLastName();\n      resetEmail();\n    }\n  }\n\n  const firstNameClass = firstNameHasError\n    ? 'form-control invalid' : 'form-control';\n\n  const lastNameClass = lastNameHasError\n    ? 'form-control invalid' : 'form-control';\n\n  const emailClass = emailHasError\n    ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='control-group'>\n        <div className={firstNameClass}>\n          <label htmlFor='name'>First Name</label>\n          <input\n            type='text'\n            id='name'\n            onChange={onHandleFirstNameChange}\n            value={enteredFirstName}\n            onBlur={onHandleFirstNameBlur}\n          />\n        {firstNameHasError && <p className='error-text'>Please enter a valid first name.</p>}\n        </div>\n        <div className={lastNameClass}>\n          <label htmlFor='name'>Last Name</label>\n          <input\n            type='text'\n            id='name'\n            onChange={onHandleLastNameChange}\n            value={enteredLastName}\n            onBlur={onHandleLastNameBlur}\n          />\n        {lastNameHasError && <p className='error-text'>Please enter a valid last name.</p>}\n        </div>\n      </div>\n      <div className={emailClass}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input\n          type='text'\n          id='name'\n          onChange={onHandleEmailChange}\n          value={enteredEmail}\n          onBlur={onHandleEmailBlur}\n        />\n      {emailHasError && <p className='error-text'>Please enter a valid email.</p>}\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","C:\\Users\\Jack\\Documents\\React-Projects\\forms-user-input\\src\\hooks\\use-input-again.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":19},{"ruleId":"37","severity":1,"message":"41","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":21},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useInputAgain' is defined but never used.","no-global-assign","no-unsafe-negation"]